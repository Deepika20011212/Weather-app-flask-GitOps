name: CI-CD Weather-Air-App 
on:
  push:
    branches: [main]

env:
  AWS_REGION: ap-south-1
  CLUSTER_NAME: demo-eks
  HELM_CHART_DIR: ./helm/weather-air
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  build-test-analyze:
    name: Build, Test, SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r weather_service/requirements.txt
          pip install -r air_service/requirements.txt
          pip install -r frontend/requirements.txt
          
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2
        with:
          host-url: ${{ env.SONAR_HOST_URL }}
          token: ${{ env.SONAR_TOKEN }}

  docker-scan-push:
    name: Build, Scan, Push Images
    runs-on: ubuntu-latest
    needs: build-test-analyze
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set IMAGE tag
        run: echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_ENV

      # Weather Service
      - name: Build Weather Service Image
        run: |
          IMAGE="${{ steps.ecr.outputs.registry }}/weather:${IMAGE_TAG}"
          docker build -t $IMAGE ./weather_service
          echo "WEATHER_IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Trivy Scan Weather Service
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.WEATHER_IMAGE }}
          severity: HIGH,CRITICAL
          ignore-unfixed: true
          format: 'table'
          exit-code: '0'

      - name: Push Weather Service Image
        run: docker push ${{ env.WEATHER_IMAGE }}

      # Air Service
      - name: Build Air Service Image
        run: |
          IMAGE="${{ steps.ecr.outputs.registry }}/air:${IMAGE_TAG}"
          docker build -t $IMAGE ./air_service
          echo "AIR_IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Trivy Scan Air Service
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.AIR_IMAGE }}
          severity: HIGH,CRITICAL
          ignore-unfixed: true
          format: 'table'
          exit-code: '0'

      - name: Push Air Service Image
        run: docker push ${{ env.AIR_IMAGE }}

      # Frontend
      - name: Build Frontend Image
        run: |
          IMAGE="${{ steps.ecr.outputs.registry }}/frontend:${IMAGE_TAG}"
          docker build -t $IMAGE ./frontend
          echo "FRONTEND_IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Trivy Scan Frontend
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.FRONTEND_IMAGE }}
          severity: HIGH,CRITICAL
          ignore-unfixed: true
          format: 'table'
          exit-code: '0'

      - name: Push Frontend Image
        run: docker push ${{ env.FRONTEND_IMAGE }}

      - name: Update values.yaml
        run: |
          sed -i "s|weatherService:.*|weatherService: ${WEATHER_IMAGE}|g" $HELM_CHART_DIR/values.yaml
          sed -i "s|airService:.*|airService: ${AIR_IMAGE}|g" $HELM_CHART_DIR/values.yaml
          sed -i "s|frontend:.*|frontend: ${FRONTEND_IMAGE}|g" $HELM_CHART_DIR/values.yaml
      - name: Commit and Push changes
        run: |
          git config --global user.email "rdeepika121201@gmail.com"
          git config --global user.name "Deepika20011212"
          git remote set-url origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}
          git add $HELM_CHART_DIR/values.yaml
          git commit -m "[skip ci] Update Helm chart with new ECR image ${{ github.run_id }}" || echo "No changes to commit"
          git push

